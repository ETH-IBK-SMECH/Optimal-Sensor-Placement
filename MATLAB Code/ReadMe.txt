Optimal Sensor Placement Algorithms for modal vibration testing
Version: 5.12.2018

Toolbox with Optimal Sensor Placement Algorithms (Modal Kinetic Energy Method (MKE), Effective Independence method (EFI), driving-point residue (DPR), Combined EFI-DPR, and Information Entropy Index (IEI) Method). 
Algorithms can be implemented for uni-axial sensors (with or without considering prediction error correlation) and for tri-axial sensors.
As input to the algorithms, modal data from an FEM model needs to be given (cf. input data).

Uni-axial Sensors - Main File
Comparison_OSP.m

Multi-axial Sensors - Main File
Comparison_OSP_Multi.m

Input Data:
DataExcel_2DFrame.mat
Contains:
- atyp (Analysis Type 0: for 2D, 1 for 3D) - double
- Coord (structure with the following fields)
		.X (x-coordinates of the FEM nodes) - double
		.Y (y-coordinates of the FEM nodes) - double
		.Z (z-coordinates of the FEM nodes) - double
		.Name (names of the FEM nodes) - cell with strings
		.Conn (names of the connected FEM nodes) - cell with strings (only beam elements can be considered)
- filename (Original name of the Excel File, which was generated by SAP2000 (FEM Software)
- Modal (structure with the following fields)
		.U1 (mode shape displacements in direction U1 for all modes (stacked into a single vector))
		.U2 (mode shape displacements in direction U2 for all modes (stacked into a single vector))
		.U3 (mode shape displacements in direction U3 for all modes (stacked into a single vector))
		.R1 (mode shape displacements in direction R1 for all modes (stacked into a single vector))
		.R2 (mode shape displacements in direction R2 for all modes (stacked into a single vector))
		.R3 (mode shape displacements in direction R3 for all modes (stacked into a single vector))
		(for atyp=0: U2, R1 and R3 can be empty)
		.CircFreq (vector with the modal frequencies)
		
Comparison_OSP.m and Comparison_OSP_Multi.m compute the optimized positioning of a limited number of sensors along the structure.
The toolkit contains further functions to evaluate the quality of the derived sensor configurations (until now for uni-axial sensors only).

- dispersion: calculates the dispersion index for the derived configurations and additional random configurations
- mac calculation: calculates the MAC value between the original mode shape (from the FEM model, defined in every DOF) and the reconstructed mode shape (derived from the measured DOFs and interpolation in DOFs where no sensor is placed) for the derived configurations and additional random configurations
- paretofront: plots a paretofron for multiple assessment metrics (cf. below for further descriptions)

The dispersion index and mac metric are currently evaluated for the configurations generated with the OSP algorithms (Comparison_OSP.m) and a large number of randomly generated configurations (for comparison purposes).
The random configurations are generated with the function Generate_randomConfig.m (Folder Random Configurations).
	
Random Configurations:
Main Function: Generate_randomConfig.m
Generates a set number of random configurations (sampling without replacement) and stores them in RandomConfigs.mat
	
	
Dispersion Analysis:
Main File: runpadOSP.m
Data: sap2000TXFiles.xlsx   Mass and Stiffness matrices from the FEM
The OSP is performed anew to compute the dispersion (function Utils/OptimalSensorPlacement.m is identical to function OSP_COR_PE.m). The results are identical to the results obtained from Comparison_OSP.m except for the node numbering (cf. runpadOSP.m for details).
The dispersion analysis can be performed for acceleration, velocity and displacement sensors. 
Further details can be found in the function description.
The dispersion indexes are saved in paretofront/MetricsDispAcc.mat

MAC calculation:
Main File: Run_MAC_calculator.m
Calculates the MAC metric for 1) the set of random configurations generated with Generate_randomConfig.m 2) The configurations derived with the runpadOSP.m (which are identical to the configurations derived with Comparison_OSP.m) 3)a specific configuration (e.g. the implemented configuration)
The MAC metrics are saved in paretofront/MetricsMAC.mat

Paretofront:
Main File: Pareto_Plot_OSP_NewMetrics.m plots the paretofront between different OSP metrics.

The code utilizes the paretofront function from Yi Cao (cf. licence-file). To activate the function:
Enter in Matlab:
mex paretofront.c

The evaluation of the paretofront visualizes which configuration performs best in terms of the selected OSP metrics.
The script: IEI_Metric_Random.m evaluates the IEI metric for random configurations. The IEI metric for the OSP configurations is evaluated with the function Comparison_OSP.m and saved to the file paretofront/IEI_Metric.mat
